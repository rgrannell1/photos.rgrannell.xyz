{
  "version": 3,
  "sources": ["../../sw.js"],
  "sourcesContent": ["const CACHE_NAME = \"sw-cache\";\nconst CACHEABLE_RESOURCES = [\n  \"/icons/android-chrome-192x192.png\",\n  \"/icons/android-chrome-512x512.png\",\n  \"/icons/apple-touch-icon.png\",\n  \"/icons/favicon-16x16.png\",\n  \"/icons/favicon-32x32.png\",\n  \"/favicon.ico\",\n  \"/favicon-32x32.png\",\n  \"/dist/css/photo-album.80c2669cdba24f0d.css\",\n  \"/dist/css/style.80c2669cdba24f0d.css\",\n  \"/dist/js/app.80c2669cdba24f0d.js\"\n];\n\nconst HOMEPAGE_THUMBNAILS = new Set();\n\nself.addEventListener(\"message\", (event) => {\n  if (event.data && event.data.type === \"homepageThumbnails\") {\n    const thumbnails = event.data.thumbnails;\n\n    thumbnails.forEach((url) => {\n      HOMEPAGE_THUMBNAILS.add(url);\n    });\n  }\n});\n\n// -- on install, cache every cacheable resource explicity listed.\nself.addEventListener(\"install\", function (event) {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(function (cache) {\n      return Promise.all(\n        CACHEABLE_RESOURCES.map((resource) => cache.add(resource)),\n      );\n    }),\n  );\n});\n\nfunction isCacheable(url) {\n  /*\n   * We can cache fonts\n   */\n  if (url.includes(\".woff2\")) {\n    return true;\n  }\n\n  /*\n   * We can cache JS files, since build-IDs will bust the cache on change\n   * and we don't cache index.html\n   */\n\n  if (url.includes(\"js/app\") || url.includes(\"js/sw\")) {\n    return true;\n  }\n\n  /*\n   * We can cache CSS files, since they also have build-IDs\n   */\n  if (url.includes(\"css/style\")) {\n    return true;\n  }\n\n  const manifestEntries = [\n    \"tribbles\",\n  ];\n\n  /*\n   * We can cache tribbles (main data source), as it has a publication ID to cache-bust between versions\n   */\n  for (const entry of manifestEntries) {\n    if (url.includes(`/manifest/${entry}`)) {\n      return true;\n    }\n  }\n\n  /*\n   * We should cache homepage thumbnails\n   */\n  for (const entry of HOMEPAGE_THUMBNAILS) {\n    if (url.includes(entry)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nself.addEventListener(\"fetch\", function (event) {\n  const url = event.request.url;\n\n  event.respondWith(\n    caches.match(event.request).then(function (response) {\n      if (response) {\n        return response;\n      }\n\n      return fetch(event.request)\n        .then(function (networkResponse) {\n          // -- just return the result directly\n          if (!isCacheable(url)) {\n            return networkResponse;\n          }\n\n          // -- cache thumbnails and artifacts\n          return caches.open(CACHE_NAME).then(function (cache) {\n            cache.put(event.request, networkResponse.clone());\n            return networkResponse;\n          });\n        }).catch((err) => {\n          console.error(err);\n        });\n    }),\n  );\n});\n"],
  "mappings": "AAAA,IAAMA,EAAa,WACbC,EAAsB,CAC1B,oCACA,oCACA,8BACA,2BACA,2BACA,eACA,qBACA,6CACA,uCACA,kCACF,EAEMC,EAAsB,IAAI,IAEhC,KAAK,iBAAiB,UAAYC,GAAU,CACtCA,EAAM,MAAQA,EAAM,KAAK,OAAS,sBACjBA,EAAM,KAAK,WAEnB,QAASC,GAAQ,CAC1BF,EAAoB,IAAIE,CAAG,CAC7B,CAAC,CAEL,CAAC,EAGD,KAAK,iBAAiB,UAAW,SAAUD,EAAO,CAChDA,EAAM,UACJ,OAAO,KAAKH,CAAU,EAAE,KAAK,SAAUK,EAAO,CAC5C,OAAO,QAAQ,IACbJ,EAAoB,IAAKK,GAAaD,EAAM,IAAIC,CAAQ,CAAC,CAC3D,CACF,CAAC,CACH,CACF,CAAC,EAED,SAASC,EAAYH,EAAK,CAoBxB,GAhBIA,EAAI,SAAS,QAAQ,GASrBA,EAAI,SAAS,QAAQ,GAAKA,EAAI,SAAS,OAAO,GAO9CA,EAAI,SAAS,WAAW,EAC1B,MAAO,GAGT,IAAMI,EAAkB,CACtB,UACF,EAKA,QAAWC,KAASD,EAClB,GAAIJ,EAAI,SAAS,aAAaK,CAAK,EAAE,EACnC,MAAO,GAOX,QAAWA,KAASP,EAClB,GAAIE,EAAI,SAASK,CAAK,EACpB,MAAO,GAIX,MAAO,EACT,CAEA,KAAK,iBAAiB,QAAS,SAAUN,EAAO,CAC9C,IAAMC,EAAMD,EAAM,QAAQ,IAE1BA,EAAM,YACJ,OAAO,MAAMA,EAAM,OAAO,EAAE,KAAK,SAAUO,EAAU,CACnD,OAAIA,GAIG,MAAMP,EAAM,OAAO,EACvB,KAAK,SAAUQ,EAAiB,CAE/B,OAAKJ,EAAYH,CAAG,EAKb,OAAO,KAAKJ,CAAU,EAAE,KAAK,SAAUK,EAAO,CACnD,OAAAA,EAAM,IAAIF,EAAM,QAASQ,EAAgB,MAAM,CAAC,EACzCA,CACT,CAAC,EAPQA,CAQX,CAAC,EAAE,MAAOC,GAAQ,CAChB,QAAQ,MAAMA,CAAG,CACnB,CAAC,CACL,CAAC,CACH,CACF,CAAC",
  "names": ["CACHE_NAME", "CACHEABLE_RESOURCES", "HOMEPAGE_THUMBNAILS", "event", "url", "cache", "resource", "isCacheable", "manifestEntries", "entry", "response", "networkResponse", "err"]
}
